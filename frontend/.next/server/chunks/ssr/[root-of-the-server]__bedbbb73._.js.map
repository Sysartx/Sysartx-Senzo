{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/5410/Desktop/Sysartx%20%28Next.js%29/forecast-admin/src/app/%28admin%29/historical-data/page.tsx"],"sourcesContent":["\r\n// ************************\r\n\r\n\r\n// \"use client\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { Download, Upload, X } from \"lucide-react\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import {\r\n//   Table,\r\n//   TableBody,\r\n//   TableCell,\r\n//   TableHead,\r\n//   TableHeader,\r\n//   TableRow,\r\n// } from \"@/components/ui/table\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Label } from \"@/components/ui/label\";\r\n\r\n// // Custom Toast Component\r\n// const Toast = ({ message, type, onClose }: { message: string; type: 'success' | 'error'; onClose: () => void }) => {\r\n//   useEffect(() => {\r\n//     const timer = setTimeout(() => {\r\n//       onClose();\r\n//     }, 3000);\r\n//     return () => clearTimeout(timer);\r\n//   }, [onClose]);\r\n\r\n//   return (\r\n//     <div className={`fixed top-4 right-4 p-4 rounded-md shadow-lg z-50 ${\r\n//       type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'\r\n//     }`}>\r\n//       {message}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default function HistoricalDataPage() {\r\n//   const [location, setLocation] = useState(\"\");\r\n//   const [provider, setProvider] = useState(\"\");\r\n//   const [year, setYear] = useState(\"\");\r\n//   const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\r\n//   const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n//   const [toast, setToast] = useState<{message: string; type: 'success' | 'error'} | null>(null);\r\n\r\n//   // Sample data\r\n//   const [tableData, setTableData] = useState([\r\n//     { id: 1, month: \"January\", headcount: 320, fte: 280, attrition: \"5%\" },\r\n//     { id: 2, month: \"February\", headcount: 325, fte: 285, attrition: \"4%\" },\r\n//     { id: 3, month: \"March\", headcount: 330, fte: 290, attrition: \"6%\" },\r\n//     { id: 4, month: \"April\", headcount: 328, fte: 292, attrition: \"5%\" },\r\n//     { id: 5, month: \"May\", headcount: 333, fte: 298, attrition: \"4%\" },\r\n//     { id: 6, month: \"June\", headcount: 335, fte: 300, attrition: \"3%\" },\r\n//     { id: 7, month: \"July\", headcount: 340, fte: 305, attrition: \"4%\" },\r\n//   ]);\r\n\r\n//   const showToast = (message: string, type: 'success' | 'error') => {\r\n//     setToast({ message, type });\r\n//   };\r\n\r\n//   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     if (e.target.files && e.target.files.length > 0) {\r\n//       setSelectedFile(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   const handleUploadSubmit = (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     if (selectedFile) {\r\n//       // Simulate upload\r\n//       setTimeout(() => {\r\n//         showToast(`${selectedFile.name} uploaded successfully.`, 'success');\r\n//         setSelectedFile(null);\r\n//         setIsUploadModalOpen(false);\r\n//       }, 1000);\r\n//     } else {\r\n//       showToast(\"Please select a file to upload.\", 'error');\r\n//     }\r\n//   };\r\n\r\n//   const handleDownload = () => {\r\n//     try {\r\n//       const templateData = [\r\n//         [\"Month\", \"Headcount\", \"FTE\", \"Attrition Rate\"],\r\n//         ...tableData.map(item => [item.month, item.headcount, item.fte, item.attrition])\r\n//       ];\r\n      \r\n//       const csvContent = templateData.map(row => row.join(\",\")).join(\"\\n\");\r\n//       const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n//       const url = URL.createObjectURL(blob);\r\n      \r\n//       const link = document.createElement(\"a\");\r\n//       link.href = url;\r\n//       link.setAttribute(\"download\", \"historical_data_template.csv\");\r\n//       document.body.appendChild(link);\r\n//       link.click();\r\n//       document.body.removeChild(link);\r\n\r\n//       showToast(\"Template download started.\", 'success');\r\n//     } catch (error) {\r\n//       showToast(\"Failed to generate template.\", 'error');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto px-4 py-8 text-gray-800 relative\">\r\n//       <h1 className=\"text-2xl font-bold mb-6\">Historical Data</h1>\r\n\r\n//       {/* Filters and Actions Row */}\r\n//       <div className=\"flex flex-col md:flex-row gap-4 mb-6\">\r\n//         {/* Location Dropdown */}\r\n//         <div className=\"flex-1\">\r\n//           <label htmlFor=\"location\" className=\"block text-sm font-medium mb-1\">\r\n//             Location\r\n//           </label>\r\n//           <select\r\n//             id=\"location\"\r\n//             value={location}\r\n//             onChange={(e) => setLocation(e.target.value)}\r\n//             className=\"w-full rounded-md border border-gray-300 py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white\"\r\n//           >\r\n//             <option value=\"\">All Locations</option>\r\n//             <option value=\"north\">North Dakota</option>\r\n//             <option value=\"south\">South Dakota</option>\r\n//             <option value=\"minnesota\">Minnesota</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Provider Dropdown */}\r\n//         <div className=\"flex-1\">\r\n//           <label htmlFor=\"provider\" className=\"block text-sm font-medium mb-1\">\r\n//             Provider\r\n//           </label>\r\n//           <select\r\n//             id=\"provider\"\r\n//             value={provider}\r\n//             onChange={(e) => setProvider(e.target.value)}\r\n//             className=\"w-full rounded-md border border-gray-300 py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white\"\r\n//           >\r\n//             <option value=\"\">All Providers</option>\r\n//             <option value=\"healthcare\">Health Care Advis</option>\r\n//             <option value=\"medical\">Medical Solutions</option>\r\n//             <option value=\"nursing\">Nursing Professionals</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Year Dropdown */}\r\n//         <div className=\"flex-1\">\r\n//           <label htmlFor=\"year\" className=\"block text-sm font-medium mb-1\">\r\n//             Year\r\n//           </label>\r\n//           <select\r\n//             id=\"year\"\r\n//             value={year}\r\n//             onChange={(e) => setYear(e.target.value)}\r\n//             className=\"w-full rounded-md border border-gray-300 py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white\"\r\n//           >\r\n//             <option value=\"\">All Years</option>\r\n//             <option value=\"2023\">2023</option>\r\n//             <option value=\"2022\">2022</option>\r\n//             <option value=\"2021\">2021</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Buttons */}\r\n//         <div className=\"flex flex-col sm:flex-row gap-2 md:gap-4 mt-auto\">\r\n//           <Button\r\n//             onClick={() => setIsUploadModalOpen(true)}\r\n//             className=\"flex items-center gap-2 bg-black text-white hover:bg-gray-800 hover:text-white\"\r\n//             variant=\"outline\"\r\n//           >\r\n//             <Upload className=\"h-4 w-4\" />\r\n//             Upload Historical Data\r\n//           </Button>\r\n//           <Button\r\n//             onClick={handleDownload}\r\n//             className=\"flex items-center gap-2 bg-black text-white hover:bg-gray-800 hover:text-white\"\r\n//             variant=\"outline\"\r\n//           >\r\n//             <Download className=\"h-4 w-4\" />\r\n//             Download Template\r\n//           </Button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Data Table */}\r\n//       <div className=\"rounded-md border border-gray-200 overflow-hidden\">\r\n//         <div className=\"overflow-x-auto\">\r\n//           <Table className=\"min-w-full\">\r\n//             <TableHeader className=\"bg-gray-200 text-lg\">\r\n//               <TableRow>\r\n//                 <TableHead className=\"w-[100px]\">Month</TableHead>\r\n//                 <TableHead>Headcount</TableHead>\r\n//                 <TableHead>FTE</TableHead>\r\n//                 <TableHead>Attrition Rate</TableHead>\r\n//               </TableRow>\r\n//             </TableHeader>\r\n//             <TableBody>\r\n//               {tableData.map((row) => (\r\n//                 <TableRow key={row.id}>\r\n//                   <TableCell className=\"font-medium\">{row.month}</TableCell>\r\n//                   <TableCell>{row.headcount}</TableCell>\r\n//                   <TableCell>{row.fte}</TableCell>\r\n//                   <TableCell>{row.attrition}</TableCell>\r\n//                 </TableRow>\r\n//               ))}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Empty State */}\r\n//       {tableData.length === 0 && (\r\n//         <div className=\"text-center py-12\">\r\n//           <p className=\"text-gray-500\">No historical data found for the selected filters</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Transparent Upload Modal */}\r\n//       {isUploadModalOpen && (\r\n//         <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4 bg-black\">\r\n//           <div \r\n//             className=\"absolute inset-0 bg-black bg-opacity-90 backdrop-blur-sm\"\r\n//             onClick={() => setIsUploadModalOpen(false)}\r\n//           />\r\n//           <div className=\"relative bg-white rounded-lg shadow-xl border border-gray-200 w-full max-w-md z-10\">\r\n//             <div className=\"flex justify-between items-center border-b p-4\">\r\n//               <h2 className=\"text-xl font-semibold\">Upload Historical Data</h2>\r\n//               <button \r\n//                 onClick={() => setIsUploadModalOpen(false)}\r\n//                 className=\"text-gray-500 hover:text-gray-700\"\r\n//               >\r\n//                 <X className=\"h-5 w-5\" />\r\n//               </button>\r\n//             </div>\r\n//             <form onSubmit={handleUploadSubmit} className=\"p-4 space-y-4\">\r\n//               <div>\r\n//                 <Label htmlFor=\"file-upload\">Select Excel File</Label>\r\n//                 <Input\r\n//                   id=\"file-upload\"\r\n//                   type=\"file\"\r\n//                   accept=\".xlsx,.xls,.csv\"\r\n//                   onChange={handleFileChange}\r\n//                   className=\"mt-1\"\r\n//                 />\r\n//                 {selectedFile && (\r\n//                   <p className=\"text-sm text-gray-600 mt-2\">\r\n//                     Selected file: {selectedFile.name}\r\n//                   </p>\r\n//                 )}\r\n//               </div>\r\n//               <div className=\"flex justify-end gap-2\">\r\n//                 <Button\r\n//                   type=\"button\"\r\n//                   variant=\"outline\"\r\n//                   onClick={() => setIsUploadModalOpen(false)}\r\n//                 >\r\n//                   Cancel\r\n//                 </Button>\r\n//                 <Button \r\n//                   type=\"submit\" \r\n//                   disabled={!selectedFile}\r\n//                   className=\"bg-black text-white hover:bg-gray-800\"\r\n//                 >\r\n//                   Upload\r\n//                 </Button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Custom Toast Notification */}\r\n//       {toast && (\r\n//         <Toast \r\n//           message={toast.message} \r\n//           type={toast.type} \r\n//           onClose={() => setToast(null)} \r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// **********************\r\n\r\n// \"use client\";\r\n// import { useState } from \"react\";\r\n// import { Download, Upload } from \"lucide-react\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import {\r\n//   Table,\r\n//   TableBody,\r\n//   TableCell,\r\n//   TableHead,\r\n//   TableHeader,\r\n//   TableRow,\r\n// } from \"@/components/ui/table\";\r\n\r\n// export default function HistoricalDataPage() {\r\n//   // State for dropdown selections\r\n//   const [location, setLocation] = useState(\"\");\r\n//   const [provider, setProvider] = useState(\"\");\r\n//   const [year, setYear] = useState(\"\");\r\n\r\n//   // Sample data - replace with your actual data\r\n//   const [tableData, setTableData] = useState([\r\n//     { id: 1, month: \"January\", headcount: 320, fte: 280, attrition: \"5%\" },\r\n//     { id: 2, month: \"February\", headcount: 325, fte: 285, attrition: \"4%\" },\r\n//     { id: 3, month: \"March\", headcount: 330, fte: 290, attrition: \"6%\" },\r\n//     { id: 4, month: \"April\", headcount: 328, fte: 292, attrition: \"5%\" },\r\n//     { id: 5, month: \"May\", headcount: 333, fte: 298, attrition: \"4%\" },\r\n//     { id: 6, month: \"June\", headcount: 335, fte: 300, attrition: \"3%\" },\r\n//     { id: 7, month: \"July\", headcount: 340, fte: 305, attrition: \"4%\" },\r\n//   ]);\r\n\r\n//   // Handle data upload (mock function)\r\n//   const handleUpload = () => {\r\n//     // In a real app, this would handle file upload\r\n//     alert(\"Upload functionality would go here\");\r\n//   };\r\n\r\n//   // Handle template download (mock function)\r\n//   const handleDownload = () => {\r\n//     // In a real app, this would trigger file download\r\n//     alert(\"Download template functionality would go here\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto px-4 py-8 text-gray-800\">\r\n//       {/* Page Title */}\r\n//       <h1 className=\"text-2xl font-bold mb-6\">Historical Data</h1>\r\n\r\n//       {/* Filters and Actions Row */}\r\n//       <div className=\"flex flex-col md:flex-row gap-4 mb-6\">\r\n//         {/* Location Dropdown */}\r\n//         <div className=\"flex-1\">\r\n//           <label htmlFor=\"location\" className=\"block text-sm font-medium mb-1\">\r\n//             Location\r\n//           </label>\r\n//           <select\r\n//             id=\"location\"\r\n//             value={location}\r\n//             onChange={(e) => setLocation(e.target.value)}\r\n//             className=\"w-full rounded-md border border-gray-300 py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-800 dark:border-gray-700\"\r\n//           >\r\n//             <option value=\"\">All Locations</option>\r\n//             <option value=\"north\">North Dakota</option>\r\n//             <option value=\"south\">South Dakota</option>\r\n//             <option value=\"minnesota\">Minnesota</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Provider Dropdown */}\r\n//         <div className=\"flex-1\">\r\n//           <label htmlFor=\"provider\" className=\"block text-sm font-medium mb-1\">\r\n//             Provider\r\n//           </label>\r\n//           <select\r\n//             id=\"provider\"\r\n//             value={provider}\r\n//             onChange={(e) => setProvider(e.target.value)}\r\n//             className=\"w-full rounded-md border border-gray-300 py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-800 dark:border-gray-700\"\r\n//           >\r\n//             <option value=\"\">All Providers</option>\r\n//             <option value=\"healthcare\">Health Care Advis</option>\r\n//             <option value=\"medical\">Medical Solutions</option>\r\n//             <option value=\"nursing\">Nursing Professionals</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Year Dropdown */}\r\n//         <div className=\"flex-1\">\r\n//           <label htmlFor=\"year\" className=\"block text-sm font-medium mb-1\">\r\n//             Year\r\n//           </label>\r\n//           <select\r\n//             id=\"year\"\r\n//             value={year}\r\n//             onChange={(e) => setYear(e.target.value)}\r\n//             className=\"w-full rounded-md border border-gray-300 py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-800 dark:border-gray-700\"\r\n//           >\r\n//             <option value=\"\">All Years</option>\r\n//             <option value=\"2023\">2023</option>\r\n//             <option value=\"2022\">2022</option>\r\n//             <option value=\"2021\">2021</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Buttons - stack on mobile */}\r\n//         <div className=\"flex flex-col sm:flex-row gap-2 md:gap-4 mt-auto\">\r\n//           <Button\r\n//             onClick={handleUpload}\r\n//             className=\"flex items-center gap-2 bg-black text-white hover:bg-gray-800 hover:text-white\"\r\n//             variant=\"outline\"\r\n//           >\r\n//             <Upload className=\"h-4 w-4\" />\r\n//             Upload Historical Data\r\n//           </Button>\r\n//           <Button\r\n//             onClick={handleDownload}\r\n//             className=\"flex items-center gap-2 bg-black text-white hover:bg-gray-800 hover:text-white\"\r\n//             variant=\"outline\"\r\n//           >\r\n//             <Download className=\"h-4 w-4\" />\r\n//             Download Template\r\n//           </Button>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Data Table */}\r\n//       <div className=\"rounded-md border border-gray-200 dark:border-gray-700 overflow-hidden\">\r\n//         <div className=\"overflow-x-auto\">\r\n//           <Table className=\"min-w-full\">\r\n//             <TableHeader className=\"bg-gray-200 dark:bg-gray-800 text-lg\">\r\n//               <TableRow>\r\n//                 <TableHead className=\"w-[100px]\">Month</TableHead>\r\n//                 <TableHead>Headcount</TableHead>\r\n//                 <TableHead>FTE</TableHead>\r\n//                 <TableHead>Attrition Rate</TableHead>\r\n//               </TableRow>\r\n//             </TableHeader>\r\n//             <TableBody>\r\n//               {tableData.map((row) => (\r\n//                 <TableRow key={row.id}>\r\n//                   <TableCell className=\"font-medium\">{row.month}</TableCell>\r\n//                   <TableCell>{row.headcount}</TableCell>\r\n//                   <TableCell>{row.fte}</TableCell>\r\n//                   <TableCell>{row.attrition}</TableCell>\r\n//                 </TableRow>\r\n//               ))}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Empty State - shown when no data matches filters */}\r\n//       {tableData.length === 0 && (\r\n//         <div className=\"text-center py-12\">\r\n//           <p className=\"text-gray-500\">No historical data found for the selected filters</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }"],"names":[],"mappings":"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","debugId":null}}]
}